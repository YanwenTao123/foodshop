"""
Django settings for untitled6 project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import sys

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,BASE_DIR)
sys.path.insert(0,os.path.join(BASE_DIR,"apps"))
sys.path.insert(0,os.path.join(BASE_DIR,"extra_apps"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0p$a#g()cw4bk%k7b&i+e1$#(-#a3+ch-5nx*@47&zbveglw69'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'show',
    'book',
    "usersetting",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'untitled6.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'untitled6.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "foodshop",
        "USER":"root",
        "PASSWORD":"123456",
        "HOST":"127.0.0.1",
        "OPTIONS":{'init_command':"SET default_storage_engine=INNODB;foreign_key_checks = 0;"}
    }
}

# session使用的存储方式
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# 指明使用哪一个库保存session数据
SESSION_CACHE_ALIAS = "session"

# APPEND_SLASH=False

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1", # 指明使用redis的1号数据库
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            }
        },
    "session": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2", # 指明使用redis的1号数据库
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
# APP_PATH=os.path.dirname(os.path.dirname(__file__))
# 注意要修改STATIC_ROOT变量
# STATIC_ROOT = os.path.join(APP_PATH, 'static').replace('\\', '/')

# 当然还有STATICFILES_DIRS变量
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,"static")
]

# 互亿验证码
APIID = "C76968892"
APIKEY = "d0804f8232bc8826a3d2b51f68e31c9e"

# 图灵机器人
USER_ID = "123456"
API_KEY = "6ce6bb89636d47bcb871a9e97bb5c985"
TULING_API = "http://openapi.tuling123.com/openapi/api/v2"
# print(STATICFILES_DIRS)

# MEDIA_URL = "/media/"
# STATIC_ROOT = os.path.join(BASE_DIR,"static")

# LOGGING = {
#     "version":1,
#     "disable_existing_logger":False,
#     "handlers":{
#         "console":{
#             "level":"DEBUG",
#             "class":"logging.StreamHandler"
#         },
#     },
#     "loggers":{
#         "django.db.bankends":{
#             "handlers":["console"],
#             "propagate":True,
#             "level":"DEBUG"
#         }
#     }
# }


# 邮箱验证
# EMAIL_USE_SSL = True
# EMAIL_HOST = 'smtp.qq.com'  # 如果是 163 改成 smtp.163.com
# EMAIL_PORT = 465
# EMAIL_HOST_USER = os.environ.get("1241081280@qq.com") # 帐号
# EMAIL_HOST_PASSWORD = os.environ.get("plsxzgjcgvqaigfb")  # 授权码（****）
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# 下面这个可以开，也可以不开，都是成功的。
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# 代理以及端口必须有
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 25

# 起初是465，但是实际上是不行的。必须用上面的25才能成功
# EMAIL_PORT = 465
EMAIL_HOST_USER = '1241081280@qq.com'

# 本来填的自己的账号密码，但是不行的.
# EMAIL_HOST_PASSWORD =os.environ['PASSWORDD']

# 账号的密码必须是授权码，忘了的可以在qq邮箱里面设置，把已关闭 |  开启
# IMAP / SMTP服务(重新开启，发短信，就好了
EMAIL_HOST_PASSWORD = "plsxzgjcgvqaigfb"

# 这里的是前缀，也就是头
EMAIL_SUBJECT_PREFIX = u'[Sercheif]'

# 后面这个必须为False否则也是发不成功的
# EMIAL_USE_TLS = True
EMIAL_USE_TLS = False
# 有这个就会显示是你的邮箱
EMAIL_FROM = '1241081280@qq.com'
